//index.js
import React from "react";
import { createRoot } from "react-dom/client";
import { BrowserRouter } from "react-router-dom";
import App from "./App";
import "../node_modules/bootstrap/dist/css/bootstrap.min.css";
createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <BrowserRouter>
      <App />
    </BrowserRouter>
  </React.StrictMode>
);

//App.js
import React from "react";
import { Routes, Route, Navigate } from "react-router-dom";
import CustomersProvider from "./contexts/CustomersContext";
import TopNav from "./contexts/TopNav";
import Home from "./contexts/Home";
import CustomersList from "./contexts/CustomersList";
import CustomerDetails from "./contexts/CustomerDetails";
import CustomerForm from "./contexts/CustomerForm";
import About from "./contexts/About";

export default function App() {
  return (
    <CustomersProvider>
      <TopNav />
      <div className="container my-4">
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/customers" element={<CustomersList />} />
          <Route path="/customers/new" element={<CustomerForm />} />
          <Route path="/customers/:id" element={<CustomerDetails />} />
          <Route path="/customers/:id/edit" element={<CustomerForm />} />
          <Route path="/about" element={<About />} />
          <Route path="*" element={<Navigate to="/" />} />
        </Routes>
      </div>
    </CustomersProvider>
  );
}


//data
//sampleData.js
export const SAMPLE_CUSTOMERS = [
  {
    id: 1,
    firstName: "Sundar",
    lastName: "Pichai",
    email: "sundar.pichai@google.com",
    phone: "",
    accounts: [
      { accountNo: "1001999", type: "SAVINGS_ACCOUNT", branch: "Bellandur", balance: 1000 },
      { accountNo: "1001888", type: "SAVINGS_ACCOUNT", branch: "Indira Nagar", balance: 2000 },
    ],
  },
  {
    id: 2,
    firstName: "Jeff",
    lastName: "Bezos",
    email: "jeff.bezos@amazon.com",
    phone: "",
    accounts: [],
  },
  {
    id: 3,
    firstName: "Satya",
    lastName: "Nadella",
    email: "satya.nadella@microsoft.com",
    phone: "",
    accounts: [],
  },
  {
    id: 4,
    firstName: "Sergey",
    lastName: "Brin",
    email: "sergey.brin@google.com",
    phone: "",
    accounts: [],
  },
  {
    id: 5,
    firstName: "Larry",
    lastName: "Page",
    email: "larry.page@google.com",
    phone: "",
    accounts: [],
  },
];
//components
//TopNav.js
import React from "react";
import { Link, NavLink } from "react-router-dom";

export default function TopNav() {
  return (
    <nav className="navbar navbar-expand-lg navbar-dark bg-dark">
      <div className="container">
        <Link className="navbar-brand" to="/">TopGuns Bank</Link>

        <button
          className="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navMenu"
          aria-controls="navMenu"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span className="navbar-toggler-icon"></span>
        </button>

        <div className="collapse navbar-collapse" id="navMenu">
          <ul className="navbar-nav ms-auto">
            <li className="nav-item">
              <NavLink className="nav-link" to="/">Home</NavLink>
            </li>
            <li className="nav-item">
              <NavLink className="nav-link" to="/customers">Customers</NavLink>
            </li>
            <li className="nav-item">
              <NavLink className="nav-link" to="/about">About</NavLink>
            </li>
            <li className="nav-item">
              {/* SCB placeholder link shown in screenshot */}
              <a className="nav-link" href="#scb">SCB</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
  );
}
//Home.js

import React from "react";

export default function Home() {
  return (
    <div className="p-4">
      <h2>Welcome to TopGuns Bank</h2>
      <p>
        This sample app manages customer data and displays account details. Use the <strong>Customers</strong> page to
        view, create, edit and delete customer records.
      </p>
      
    </div>
  );
}


//CustomerList.js
import React from "react";
import { Link } from "react-router-dom";
import { useCustomers } from "../contexts/CustomersContext";

export default function CustomersList() {
  const { customers, deleteCustomer } = useCustomers();

  const handleDelete = (id) => {
    if (window.confirm("Are you sure you want to delete this customer?")) {
      deleteCustomer(id);
    }
  };

  return (
    <div>
      <div className="mb-3">
        <Link to="/customers/new" className="text-primary">Create new customer</Link>
      </div>

      <h5>Customers List</h5>

      <table className="table table-bordered table-hover">
        <thead className="table-primary">
          <tr>
            <th style={{width: "5%"}}>Id</th>
            <th style={{width: "20%"}}>First Name</th>
            <th style={{width: "20%"}}>Last Name</th>
            <th>Email</th>
            <th style={{width: "18%"}}>Actions</th>
          </tr>
        </thead>
        <tbody>
          {customers.map(c => (
            <tr key={c.id}>
              <td>{c.id}</td>
              <td>{c.firstName}</td>
              <td>{c.lastName}</td>
              <td>{c.email}</td>
              <td>
                <Link to={`/customers/${c.id}`} className="me-2">Show</Link>
                <Link to={`/customers/${c.id}/edit`} className="me-2">Edit</Link>
                <button className="btn btn-link p-0 text-danger" onClick={() => handleDelete(c.id)}>Delete</button>
              </td>
            </tr>
          ))}
          {customers.length === 0 && (
            <tr><td colSpan="5" className="text-center">No customers found.</td></tr>
          )}
        </tbody>
      </table>
    </div>
  );
}

//CustomersContext.js

import React, { createContext, useContext, useState, useEffect } from "react";
import { SAMPLE_CUSTOMERS } from "../data/sampleData";

const STORAGE_KEY = "topguns_customers_v1";
const CustomersContext = createContext();

export function useCustomers() {
  return useContext(CustomersContext);
}

export default function CustomersProvider({ children }) {
  const [customers, setCustomers] = useState(SAMPLE_CUSTOMERS);

  useEffect(() => {
  if (!localStorage.getItem(STORAGE_KEY)) {
    localStorage.setItem(STORAGE_KEY, JSON.stringify(SAMPLE_CUSTOMERS));
  }
}, []);


  const addCustomer = (customer) => {
    const nextId = customers.length ? Math.max(...customers.map(c => c.id)) + 1 : 1;
    setCustomers([...customers, { ...customer, id: nextId }]);
  };

  const updateCustomer = (id, updated) => {
    setCustomers(customers.map(c => (c.id === Number(id) ? { ...c, ...updated } : c)));
  };

  const deleteCustomer = (id) => {
    setCustomers(customers.filter(c => c.id !== Number(id)));
  };

  const getCustomer = (id) => customers.find(c => c.id === Number(id));

  const value = { customers, addCustomer, updateCustomer, deleteCustomer, getCustomer };

  return <CustomersContext.Provider value={value}>{children}</CustomersContext.Provider>;
}

//CustomerForm.js
import React, { useState, useEffect } from "react";
import { Link, useNavigate, useParams } from "react-router-dom";
import { useCustomers } from "../contexts/CustomersContext";

export default function CustomerForm() {
  const { id } = useParams();
  const isEdit = Boolean(id);
  const { addCustomer, getCustomer, updateCustomer } = useCustomers();
  const navigate = useNavigate();

  const [form, setForm] = useState({
    firstName: "",
    lastName: "",
    email: "",
    phone: "",
  });
  const [errors, setErrors] = useState({});

  useEffect(() => {
    if (isEdit) {
      const c = getCustomer(id);
      if (c) {
        setForm({
          firstName: c.firstName || "",
          lastName: c.lastName || "",
          email: c.email || "",
          phone: c.phone || "",
        });
      }
    }
  }, [id]);

  const validate = () => {
    const e = {};
    if (!form.firstName.trim()) e.firstName = "Please enter first name";
    if (!form.lastName.trim()) e.lastName = "Please enter last name";
    if (!form.email.trim()) e.email = "Please enter email details";
    else {
      // simple email check
      const re = /\S+@\S+\.\S+/;
      if (!re.test(form.email)) e.email = "Enter a valid email";
    }
    if (form.phone && !/^[0-9+\-\s]{7,15}$/.test(form.phone)) e.phone = "Enter a valid phone no";
    setErrors(e);
    return Object.keys(e).length === 0;
  };

  const handleChange = (e) => {
    setForm(prev => ({ ...prev, [e.target.name]: e.target.value }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!validate()) return;

    try {
      if (isEdit) {
        updateCustomer(id, form);
      } else {
        addCustomer({ ...form, accounts: [] });
      }
      navigate("/customers");
    } catch (err) {
      // show generic failure (simulate server error)
      alert("Unable to save customer. Please try again.");
    }
  };

  return (
    <div className="row">
      <div className="col-md-6">
        <Link to="/customers" className="text-primary">&lt; Back to Customers List</Link>
        <h5 className="mt-3">{isEdit ? "Edit Customer" : "Add Customer"}</h5>
        <form className="mt-3" onSubmit={handleSubmit} noValidate>
          <div className="mb-3">
            <label className="form-label">First Name</label>
            <input name="firstName" value={form.firstName} onChange={handleChange} className="form-control" placeholder="Please enter first name" />
            {errors.firstName && <div className="text-danger small mt-1">{errors.firstName}</div>}
          </div>

          <div className="mb-3">
            <label className="form-label">Last Name</label>
            <input name="lastName" value={form.lastName} onChange={handleChange} className="form-control" placeholder="Please enter last name" />
            {errors.lastName && <div className="text-danger small mt-1">{errors.lastName}</div>}
          </div>

          <div className="mb-3">
            <label className="form-label">Email</label>
            <input name="email" value={form.email} onChange={handleChange} className="form-control" placeholder="Please enter email details" />
            {errors.email && <div className="text-danger small mt-1">{errors.email}</div>}
          </div>

          <div className="mb-3">
            <label className="form-label">Phone</label>
            <input name="phone" value={form.phone} onChange={handleChange} className="form-control" placeholder="Please enter phone no" />
            {errors.phone && <div className="text-danger small mt-1">{errors.phone}</div>}
          </div>

          <button type="submit" className="btn btn-primary">
            {isEdit ? "Update Customer" : "Create Customer"}
          </button>
          <Link to="/customers" className="btn btn-link ms-2">Cancel</Link>
        </form>
      </div>

      <div className="col-md-6">
        <div className="mt-4">
          <h6>Form instructions</h6>
          <ul>
            <li>Required fields: First Name, Last Name, Email.</li>
            <li>If creation/update is successful you'll be redirected to the list page.</li>
            <li>If validation fails, an error message will be shown and you can fix it.</li>
          </ul>
        </div>
      </div>
    </div>
  );
}

//CustomerDetails

import React from "react";
import { Link, useParams } from "react-router-dom";
import { useCustomers } from "../contexts/CustomersContext";

export default function CustomerDetails() {
  const { id } = useParams();
  const { getCustomer } = useCustomers();
  const customer = getCustomer(id);

  if (!customer) {
    return (
      <div>
        <Link to="/customers" className="text-primary">&lt; Back to Customers List</Link>
        <h4 className="mt-3">Customer not found</h4>
      </div>
    );
  }

  return (
    <div>
      <Link to="/customers" className="text-primary">&lt; Back to Customers List</Link>

      <div className="row mt-3">
        <div className="col-md-4">
          <h5>Customer Details</h5>
          <dl className="row">
            <dt className="col-4">ID:</dt><dd className="col-8">{customer.id}</dd>

            <dt className="col-4">First Name :</dt><dd className="col-8">{customer.firstName}</dd>

            <dt className="col-4">Last Name:</dt><dd className="col-8">{customer.lastName}</dd>

            <dt className="col-4">Email:</dt><dd className="col-8">{customer.email}</dd>

            <dt className="col-4">Phone:</dt><dd className="col-8">{customer.phone || "-"}</dd>
          </dl>
        </div>

        <div className="col-md-8">
          <h5>List of Accounts</h5>
          <table className="table table-bordered">
            <thead className="table-primary">
              <tr>
                <th>Account No</th>
                <th>Type</th>
                <th>Branch</th>
                <th>Balance</th>
              </tr>
            </thead>
            <tbody>
              {customer.accounts && customer.accounts.length ? (
                customer.accounts.map((a, idx) => (
                  <tr key={idx}>
                    <td>{a.accountNo}</td>
                    <td>{a.type}</td>
                    <td>{a.branch}</td>
                    <td>{a.balance}</td>
                  </tr>
                ))
              ) : (
                <tr><td colSpan="4" className="text-center">No accounts found</td></tr>
              )}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
}

//About.js

import React from "react";
export default function About(){
  return (
    <div className="p-4">
      <h3>About TopGuns Bank</h3>
      <p>TopGuns Bank - sample application for customer and account management.</p>
    </div>
  );
}
